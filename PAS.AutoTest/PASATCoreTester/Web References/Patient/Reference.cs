//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3603.
// 
#pragma warning disable 1591

namespace PASATCoreTester.Patient {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Patient", Namespace="http://carestreamhealth.com/pas/Patient?wsdl")]
    public partial class Patient : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback setPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback listObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback findPatientOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Patient() {
            this.Url = global::PASATCoreTester.Properties.Settings.Default.PASATCoreTester_Patient_Patient;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createPatientCompletedEventHandler createPatientCompleted;
        
        /// <remarks/>
        public event setPatientCompletedEventHandler setPatientCompleted;
        
        /// <remarks/>
        public event getPatientCompletedEventHandler getPatientCompleted;
        
        /// <remarks/>
        public event listObjectCompletedEventHandler listObjectCompleted;
        
        /// <remarks/>
        public event findPatientCompletedEventHandler findPatientCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://carestreamhealth.com/pas/Patient?wsdl", ResponseNamespace="http://carestreamhealth.com/pas/Patient?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string createPatient(string patientInfo) {
            object[] results = this.Invoke("createPatient", new object[] {
                        patientInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createPatientAsync(string patientInfo) {
            this.createPatientAsync(patientInfo, null);
        }
        
        /// <remarks/>
        public void createPatientAsync(string patientInfo, object userState) {
            if ((this.createPatientOperationCompleted == null)) {
                this.createPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatePatientOperationCompleted);
            }
            this.InvokeAsync("createPatient", new object[] {
                        patientInfo}, this.createPatientOperationCompleted, userState);
        }
        
        private void OncreatePatientOperationCompleted(object arg) {
            if ((this.createPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createPatientCompleted(this, new createPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://carestreamhealth.com/pas/Patient?wsdl", ResponseNamespace="http://carestreamhealth.com/pas/Patient?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string setPatient(string patientInfo) {
            object[] results = this.Invoke("setPatient", new object[] {
                        patientInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void setPatientAsync(string patientInfo) {
            this.setPatientAsync(patientInfo, null);
        }
        
        /// <remarks/>
        public void setPatientAsync(string patientInfo, object userState) {
            if ((this.setPatientOperationCompleted == null)) {
                this.setPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetPatientOperationCompleted);
            }
            this.InvokeAsync("setPatient", new object[] {
                        patientInfo}, this.setPatientOperationCompleted, userState);
        }
        
        private void OnsetPatientOperationCompleted(object arg) {
            if ((this.setPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setPatientCompleted(this, new setPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://carestreamhealth.com/pas/Patient?wsdl", ResponseNamespace="http://carestreamhealth.com/pas/Patient?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string getPatient(string patientId) {
            object[] results = this.Invoke("getPatient", new object[] {
                        patientId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPatientAsync(string patientId) {
            this.getPatientAsync(patientId, null);
        }
        
        /// <remarks/>
        public void getPatientAsync(string patientId, object userState) {
            if ((this.getPatientOperationCompleted == null)) {
                this.getPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPatientOperationCompleted);
            }
            this.InvokeAsync("getPatient", new object[] {
                        patientId}, this.getPatientOperationCompleted, userState);
        }
        
        private void OngetPatientOperationCompleted(object arg) {
            if ((this.getPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPatientCompleted(this, new getPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://carestreamhealth.com/pas/Patient?wsdl", ResponseNamespace="http://carestreamhealth.com/pas/Patient?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string listObject(string filter) {
            object[] results = this.Invoke("listObject", new object[] {
                        filter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void listObjectAsync(string filter) {
            this.listObjectAsync(filter, null);
        }
        
        /// <remarks/>
        public void listObjectAsync(string filter, object userState) {
            if ((this.listObjectOperationCompleted == null)) {
                this.listObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistObjectOperationCompleted);
            }
            this.InvokeAsync("listObject", new object[] {
                        filter}, this.listObjectOperationCompleted, userState);
        }
        
        private void OnlistObjectOperationCompleted(object arg) {
            if ((this.listObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listObjectCompleted(this, new listObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://carestreamhealth.com/pas/Patient?wsdl", ResponseNamespace="http://carestreamhealth.com/pas/Patient?wsdl")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string findPatient(string filter) {
            object[] results = this.Invoke("findPatient", new object[] {
                        filter});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void findPatientAsync(string filter) {
            this.findPatientAsync(filter, null);
        }
        
        /// <remarks/>
        public void findPatientAsync(string filter, object userState) {
            if ((this.findPatientOperationCompleted == null)) {
                this.findPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindPatientOperationCompleted);
            }
            this.InvokeAsync("findPatient", new object[] {
                        filter}, this.findPatientOperationCompleted, userState);
        }
        
        private void OnfindPatientOperationCompleted(object arg) {
            if ((this.findPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findPatientCompleted(this, new findPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void createPatientCompletedEventHandler(object sender, createPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void setPatientCompletedEventHandler(object sender, setPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class setPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal setPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getPatientCompletedEventHandler(object sender, getPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void listObjectCompletedEventHandler(object sender, listObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void findPatientCompletedEventHandler(object sender, findPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591